macro QR(a, b, c, d) {
	a = a + b;
	d = d ^ a;
	d = d <<< 16;

	c = c + d;
	b = b ^ c;
	b = b <<< 12;

	a = a + b;
	d = d ^ a;
	d = d <<< 8;

	c = c + d;
	b = b ^ c;
	b = b <<< 7;
}

x0[0] = 0x61707865;
x0[1] = 0x3320646e;
x0[2] = 0x79622d32;
x0[3] = 0x6b206574;
x0[4] = key[0];
x0[5] = key[1];
x0[6] = key[2];
x0[7] = key[3];
x0[8] = key[4];
x0[9] = key[5];
x0[10] = key[6];
x0[11] = key[7];
x0[12] = nonce[0];
x0[13] = nonce[1];
x0[14] = nonce[2];
x0[15] = nonce[3];

x[0] = x0[0];
x[1] = x0[1];
x[2] = x0[2];
x[3] = x0[3];
x[4] = x0[4];
x[5] = x0[5];
x[6] = x0[6];
x[7] = x0[7];
x[8] = x0[8];
x[9] = x0[9];
x[10] = x0[10];
x[11] = x0[11];
x[12] = x0[12];
x[13] = x0[13];
x[14] = x0[14];
x[15] = x0[15];

for (i from 0 to 9) {
	QR(x[0], x[4], x[8], x[12]);
	QR(x[1], x[5], x[9], x[13]);
	QR(x[2], x[6], x[10], x[14]);
	QR(x[3], x[7], x[11], x[15]);

	QR(x[0], x[5], x[10], x[15]);
	QR(x[1], x[6], x[11], x[12]);
	QR(x[2], x[7], x[8], x[13]);
	QR(x[3], x[4], x[9], x[14]);
}

hash[0] = x0[0] + x[0];
hash[1] = x0[1] + x[1];
hash[2] = x0[2] + x[2];
hash[3] = x0[3] + x[3];
hash[4] = x0[4] + x[4];
hash[5] = x0[5] + x[5];
hash[6] = x0[6] + x[6];
hash[7] = x0[7] + x[7];
hash[8] = x0[8] + x[8];
hash[9] = x0[9] + x[9];
hash[10] = x0[10] + x[10];
hash[11] = x0[11] + x[11];
hash[12] = x0[12] + x[12];
hash[13] = x0[13] + x[13];
hash[14] = x0[14] + x[14];
hash[15] = x0[15] + x[15];

enc[0] = m[0] ^ hash[0];
enc[1] = m[1] ^ hash[1];
enc[2] = m[2] ^ hash[2];
enc[3] = m[3] ^ hash[3];
enc[4] = m[4] ^ hash[4];
enc[5] = m[5] ^ hash[5];
enc[6] = m[6] ^ hash[6];
enc[7] = m[7] ^ hash[7];
enc[8] = m[8] ^ hash[8];
enc[9] = m[9] ^ hash[9];
enc[10] = m[10] ^ hash[10];
enc[11] = m[11] ^ hash[11];
enc[12] = m[12] ^ hash[12];
enc[13] = m[13] ^ hash[13];
enc[14] = m[14] ^ hash[14];
enc[15] = m[15] ^ hash[15];